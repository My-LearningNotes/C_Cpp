GCC优化级别以及GDB调试级别
==========================


``GCC -O``\ 选项
----------------

这个选项控制所有的优化等级。

使用优化选项会使编译过程耗费更多的时间，并且占用更多的内存，尤其是在提高优化等级的时候。

``-O``\ 设置一共有五种: ``-O0``, ``-O1``, ``-O2``, ``-O3``\ 和\ ``-Os``\ 。

除了\ ``-O0``\ 之外，每一个\ ``-O``\ 设置都会多启用几个选项，具体可以参考gcc手册的优化选项章节，以便了解每个\ ``-O``\ 等级启用了哪些选项以及它们有何作用。

各个优化等级的简要说明：

-  ``-O0``

   这个等级(字母O后面跟个零)关闭所有优化选项。
   也就是\ ``CFLAGS``\ 或\ ``CXXFLAGS``\ 中没有设置\ ``-O``\ 等级时的默认等级，这样就不会优化代码，这通常不是我们想要的。

-  ``-O1``

   这是最基本的优化等级。
   编译器会在不花费太多编译时间的同时试图生成更快更小的代码。这些优化是非常基础的，一般这些任务肯定能顺序完成。

-  ``-O2``

   ``-O1``\ 的进阶，这是推荐的优化等级，除非你有特殊的需求。
   ``-O2``\ 会比\ ``-O1``\ 启用多一些标记，设置了\ ``-O2``\ 之后，编译器会试图提高代码性能而不会增大体积和大量占用编译时间。

-  ``-O3``

   这是最高最危险的优化等级。
   用这个选项会延长编译代码的时间，并且在使用gcc4.x的系统里不应全局启用。
   自从3.x版本以来gcc的行为已经有了极大地变化。在3.x，\ ``-O3``\ 生成的代码也只是比\ ``-O2``\ 快一点点而已，而gcc4.x中还未必更快。
   用\ ``-O3``\ 来编译所有的软件包将产生更大体积更耗内存的二进制文件，大大增加编译失败的机会或不可预知的程序行为(包括错误)。
   这样做将得不偿失，记住过犹不及，在gcc4.x中使用\ ``-O3``\ 是不推荐的。

-  ``-Os``

   这个等级用来优化代码尺寸。
   其中启用了\ ``-O2``\ 中不会增加磁盘空间占用的代码生成选项，这对于磁盘空间极其紧张或者CPU缓存较小的机器非常有用。
   但也可能产生些许问题，因此不推荐使用\ ``-Os``\ 。


GDB调试级别
-----------

GDB(GNU Debugger)是GCC的调试工具，功能强大。

GDB主要可以完成下面四个方面的功能：

-  启动程序，可以按照自定义的要求运行程序

-  可让被调试的程序在指定的断点处停住

-  当程序被停住时，可以检查此时程序中发生的事

-  动态的改变程序的执行环境


``GCC -g``\ 选项控制GDB的调试级别。
如果不打开\ ``-g``\ 或者\ ``-ggdb``\ (GDB专用调试开关)，GCC编译时不会加入调试信息，因为这样会增大生成的代码的体积。

GCC采用了分级调试，通过在\ ``-g``\ 选项后附加数字\ *1*, *2*\ 或\ *3*\ 来指定在代码中加入调试信息量。

- 默认的级别是\ *2*\ (``-g2``)，此时调试信息包括扩展的符号表，行号，局部或外部变量信息。
- 级别\ *3*\ (``-g3``)包含级别2中的调试信息和源代码中定义的宏。
- 级别\ *1*\ (\ ``-g1``)不包含局部变量和与行号有关的调试信息，只能用于回溯跟踪和堆栈转储之用。


.. note::

    回溯跟踪指的是监视程序在运行过程中的函数调用历史，堆栈转储则是一种以原始的十六进制格式保存程序执行环境的方法，两者都是进场用到的调试手段。

--------------

参考：

`GCC优化级别以及GDB调试级别 <http://www.360doc.com/content/11/1204/22/532901_169714672.shtml>`__
